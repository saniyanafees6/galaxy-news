{"version":3,"sources":["webpack:///./src/components/WeatherContainer.js","webpack:///./src/pages/weather.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/menu.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js"],"names":["WeatherContainer","_this","_Component","call","this","state","items","componentDidMount","getItems","_this2","fetch","then","results","json","setState","slice","render","react_default","a","createElement","map","item","index","className","messageType","messageURL","messageIssueTime","dist_default","messageBody","Component","WeatherPage","layout","seo","title","components_WeatherContainer","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","Menu","style","background","paddingTop","position","top","left","zIndex","width","borderBottom","listStyle","display","justifyContent","color","to","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","Header","_ref","siteTitle","marginBottom","margin","maxWidth","padding","textDecoration","propTypes","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","arrayOf","Layout","children","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","Fragment","_menu__WEBPACK_IMPORTED_MODULE_3__","relative","node"],"mappings":"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","file":"component---src-pages-weather-js-90792305defcdf5f0cad.js","sourcesContent":["import React, { Component } from \"react\"\nimport Markdown from \"react-remarkable\"\n\nclass WeatherContainer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [],\n    }\n  }\n  componentDidMount() {\n    this.getItems()\n  }\n  getItems() {\n    fetch(\n      \"https://api.nasa.gov/DONKI/notifications?type=all&api_key=EZlD2gwS3nwMcn2EbaATVg0VFP7vKFgINM4Z2HOw\"\n    )\n      .then(results => results.json())\n      .then(results => this.setState({ items: results.slice(0, 1) }))\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.items.map(function(item, index) {\n          return (\n            <div className=\"weather\">\n              <h2>{item.messageType}</h2>\n              <h6>{item.messageURL}</h6>\n              <h6>{item.messageIssueTime}</h6>\n\n              <Markdown>{item.messageBody}</Markdown>\n            </div>\n          )\n        })}\n      </ul>\n    )\n  }\n}\nexport default WeatherContainer\n//   https://api.nasa.gov/planetary/apod?api_key=nxKl8yTvpvsXEqRz06mTPnn29uyckFmFCYrnqEIz\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport WeatherContainer from \"../components/WeatherContainer\"\n\nconst WeatherPage = () => (\n  <Layout>\n    <SEO title=\"Weather\" />\n    <h1 className=\"title\">Weather</h1>\n    <p className=\"description\">\n        The following article was taken from NASA's Space Weather Database Of Notifications, Knowledge, Information (DONKI) API. NASA's DONKI API provides weather observations, forecasts and notifications on a daily basis. \n    </p>\n    <WeatherContainer />\n  </Layout>\n)\n\nexport default WeatherPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport Link from \"gatsby-link\"\n\nconst Menu = () => (\n  <div\n    style={{\n      background: \"#222\",\n      paddingTop: \"10px\",\n      position: \"relative\",\n      top: 0,\n      left: 0,\n      zIndex: 30,\n      width: \"100%\",\n      borderBottom:\"3px solid #3E8891\",\n    }}\n  >\n    <ul\n      style={{\n        listStyle: \"none\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        color: \"#fff\",\n      }}\n    >\n      <li>\n        <Link className=\"navlink\" to=\"/\">\n          Home\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navlink\" to=\"/images\">\n          Images\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navlink\" to=\"/weather\">\n          Weather\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navlink\" to=\"/news\">\n          News\n        </Link>\n      </li>\n    </ul>\n  </div>\n)\n\nexport default Menu\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Menu from \"./menu\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport { relative } from \"path\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <nav>\n          <Menu />\n          </nav>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 2000,\n          padding: `0px`,\n          paddingTop: 0,\n         background: 'white',\n          // top: '0',\n          // width: '100%',\n          // zIndex:-2,\n        }}\n      >\n                <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 2000,\n            padding: `2rem`,\n            paddingTop: 0,\n            position:relative,\n          }}\n        >\n          \n          <main>\n          \n            {children}\n          </main>\n        </div>\n        {/* <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer> */}\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}